package com.bridgelabz.utility;

import java.util.Random;
import java.util.Scanner;

public class Utility {
	Scanner n = new Scanner(System.in);

	// Use for reading user input(complete line) through keyboard
	public String readText() {
		String Username = n.nextLine();
		return Username;
	}

	// Use for reading user input(Integer value) through keyboard
	public int readInteger() {
		int Input = n.nextInt();
		return Input;
	}

	// Use for getting Random integer value between two given range
	public int getRandomNumberInRange(int MinimumValue, int MaximumValue) {

		Random Random = new Random();
		return Random.nextInt((MaximumValue - MinimumValue) + 1) + MinimumValue;
	}

	// Use for Replacing source string from targeted string
	public String replaceAll(String Original, String Username,
			String NewUsername) {
		String Changed = Original.replaceAll(Username, NewUsername);
		return Changed;
	}

	// Use for checking whether Strings are Anagram or not
	public boolean IsAnagram(String FirstString, String SecondString) {
		String String1, String2;

		String1 = removeSpace(FirstString);
		String1 = String1.toUpperCase();
		String2 = removeSpace(SecondString);
		String2 = String2.toUpperCase();
		String1 = arrange(String1);
		String2 = arrange(String2);

		if (String1.equals(String2) == true) {
			return true;
		} else
			return false;
	}

	// Use for arranging string in Alphabetical order
	public String arrange(String Input) {
		char Temp;
		char[] A;
		A = Input.toCharArray();

		for (int i = 0; i < A.length - 1; i++) {
			for (int j = i + 1; j < A.length; j++) {
				if (A[i] > A[j]) {
					Temp = A[i];
					A[i] = A[j];
					A[j] = Temp;
				}
			}
		}
		String Output = new String(A);
		return Output;
	}

	// Use for Removing Space between String
	public String removeSpace(String Input) {
		int j = 0;
		char[] l1;
		String Output;
		l1 = Input.toCharArray();
		char[] NewInput = new char[50];
		for (int i = 0; i < l1.length; i++) {
			if (l1[i] != ' ') {
				NewInput[j] = l1[i];
				j++;
			}
		}
		Output = String.valueOf(NewInput);
		return Output;
	}

	public void arrayBubbleSort(int[] InputArray) {
		int Temp;
		for (int i = 0; i < InputArray.length - 1; i++) {
			for (int j = i + 1; j < InputArray.length; j++)

			{
				if (InputArray[i] > InputArray[j]) {
					Temp = InputArray[i];
					InputArray[i] = InputArray[j];
					InputArray[j] = Temp;
				}
			}
		}
		for (int k = 0; k < InputArray.length; k++)
			System.out.print(InputArray[k] + "  ");
	}

	public  void InsertionSort(int[] Input)
	{
		
		int Temp;
			
		for(int j= 1;j < Input.length ; j++)
			{
				for(int i =0;i<j;i++)
				{
					if(Input[i]>Input[j])
						{
							Temp = Input[i];
							Input[i] = Input[j];
							Input[j] = Temp;
						}
				
				}
			}
		for(int k =0 ;k < Input.length;k++)
			System.out.print(Input[k]+"  ");
	}
}
