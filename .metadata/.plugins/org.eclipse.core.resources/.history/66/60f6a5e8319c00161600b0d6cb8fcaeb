/*import java.util.Scanner;
import java.util.Random;
/*
Coupon Numbers
a)Description -> Given N distinct Coupon Numbers,
 how many random numbers do you need to generate distinct coupon number? 
 This program simulates this random process.
b)I/P -> N Distinct Coupon Number
c)Logic -> repeatedly choose a random number and check whether it's a new one.
d)O/P -> total random number needed to have all distinct numbers.
Functions => Write Class Static Functions to generate random number and to process distinct coupons.
*/
/*

public class Coupons {
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int min = 1;
		Scanner n = new Scanner(System.in);
		System.out.println("Enter no .of distict coupon needed :");
		int max = n.nextInt();
		System.out.println("Entered no. of coupon needed is " + max);
		Random ran = new Random();
		
		n.close();
		
	}

}
*/


import java.util.Random;

public class Coupons {

	public static void main(String[] args) {

		for (int i = 0; i < 10; i++) {
			System.out.println(getRandomNumberInRange(5, 10));
		}

	}

	private static int getRandomNumberInRange(int min, int max) {

		if (min >= max) {
			throw new IllegalArgumentException("max must be greater than min");
		}

		Random r = new Random();
		return r.nextInt((max - min) + 1) + min;
	}

}